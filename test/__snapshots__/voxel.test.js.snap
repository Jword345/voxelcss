// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Voxel can be added to a scene via animDown 1`] = `undefined`;

exports[`Voxel can be added to a scene via animUp 1`] = `undefined`;

exports[`Voxel can be added to and removed from a scene 1`] = `undefined`;

exports[`Voxel can create clones 1`] = `
Object {
  "x": 123,
  "y": 456,
  "z": 789,
}
`;

exports[`Voxel can get and set mesh 1`] = `
Mesh {
  "_events": Object {
    "change": Array [
      Object {
        "callback": [Function],
        "context": undefined,
        "ctx": [Circular],
        "listening": undefined,
      },
    ],
  },
  "getBack": [Function],
  "getBottom": [Function],
  "getFaces": [Function],
  "getFront": [Function],
  "getLeft": [Function],
  "getRight": [Function],
  "getTop": [Function],
  "listenTo": [Function],
  "listenToOnce": [Function],
  "off": [Function],
  "on": [Function],
  "once": [Function],
  "serialize": [Function],
  "setBack": [Function],
  "setBottom": [Function],
  "setFaces": [Function],
  "setFront": [Function],
  "setLeft": [Function],
  "setRight": [Function],
  "setTop": [Function],
  "stopListening": [Function],
  "trigger": [Function],
}
`;

exports[`Voxel can get and set mesh 2`] = `
Mesh {
  "_events": Object {
    "change": Array [
      Object {
        "callback": [Function],
        "context": undefined,
        "ctx": [Circular],
        "listening": undefined,
      },
    ],
  },
  "getBack": [Function],
  "getBottom": [Function],
  "getFaces": [Function],
  "getFront": [Function],
  "getLeft": [Function],
  "getRight": [Function],
  "getTop": [Function],
  "listenTo": [Function],
  "listenToOnce": [Function],
  "off": [Function],
  "on": [Function],
  "once": [Function],
  "serialize": [Function],
  "setBack": [Function],
  "setBottom": [Function],
  "setFaces": [Function],
  "setFront": [Function],
  "setLeft": [Function],
  "setRight": [Function],
  "setTop": [Function],
  "stopListening": [Function],
  "trigger": [Function],
}
`;

exports[`Voxel can get and set mesh 3`] = `
Mesh {
  "_events": Object {
    "change": Array [
      Object {
        "callback": [Function],
        "context": undefined,
        "ctx": [Circular],
        "listening": undefined,
      },
    ],
  },
  "getBack": [Function],
  "getBottom": [Function],
  "getFaces": [Function],
  "getFront": [Function],
  "getLeft": [Function],
  "getRight": [Function],
  "getTop": [Function],
  "listenTo": [Function],
  "listenToOnce": [Function],
  "off": [Function],
  "on": [Function],
  "once": [Function],
  "serialize": [Function],
  "setBack": [Function],
  "setBottom": [Function],
  "setFaces": [Function],
  "setFront": [Function],
  "setLeft": [Function],
  "setRight": [Function],
  "setTop": [Function],
  "stopListening": [Function],
  "trigger": [Function],
}
`;

exports[`Voxel can get and set mesh 4`] = `
Mesh {
  "_events": Object {
    "change": Array [
      Object {
        "callback": [Function],
        "context": undefined,
        "ctx": [Circular],
        "listening": undefined,
      },
    ],
  },
  "getBack": [Function],
  "getBottom": [Function],
  "getFaces": [Function],
  "getFront": [Function],
  "getLeft": [Function],
  "getRight": [Function],
  "getTop": [Function],
  "listenTo": [Function],
  "listenToOnce": [Function],
  "off": [Function],
  "on": [Function],
  "once": [Function],
  "serialize": [Function],
  "setBack": [Function],
  "setBottom": [Function],
  "setFaces": [Function],
  "setFront": [Function],
  "setLeft": [Function],
  "setRight": [Function],
  "setTop": [Function],
  "stopListening": [Function],
  "trigger": [Function],
}
`;

exports[`Voxel can handle left click events 1`] = `
Array [
  Array [
    "TopClick",
    Object {
      "target": Voxel {
        "_events": Object {
          "move": Array [
            Object {
              "callback": [Function],
              "context": undefined,
              "ctx": [Circular],
              "listening": undefined,
            },
          ],
        },
        "addToScene": [Function],
        "animDown": [Function],
        "animUp": [Function],
        "clone": [Function],
        "getAnimatedElement": [Function],
        "getDimension": [Function],
        "getDomElement": [Function],
        "getMesh": [Function],
        "getPosition": [Function],
        "getPositionX": [Function],
        "getPositionY": [Function],
        "getPositionZ": [Function],
        "listenTo": [Function],
        "listenToOnce": [Function],
        "off": [Function],
        "on": [Function],
        "once": [Function],
        "removeFromScene": [Function],
        "removeParentScene": [Function],
        "setDimension": [Function],
        "setMesh": [Function],
        "setParentScene": [Function],
        "setPosition": [Function],
        "setPositionX": [Function],
        "setPositionY": [Function],
        "setPositionZ": [Function],
        "stopListening": [Function],
        "translate": [Function],
        "translateX": [Function],
        "translateY": [Function],
        "translateZ": [Function],
        "trigger": [Function],
        "updateLightSource": [Function],
      },
    },
  ],
  Array [
    "BottomClick",
    Object {
      "target": Voxel {
        "_events": Object {
          "move": Array [
            Object {
              "callback": [Function],
              "context": undefined,
              "ctx": [Circular],
              "listening": undefined,
            },
          ],
        },
        "addToScene": [Function],
        "animDown": [Function],
        "animUp": [Function],
        "clone": [Function],
        "getAnimatedElement": [Function],
        "getDimension": [Function],
        "getDomElement": [Function],
        "getMesh": [Function],
        "getPosition": [Function],
        "getPositionX": [Function],
        "getPositionY": [Function],
        "getPositionZ": [Function],
        "listenTo": [Function],
        "listenToOnce": [Function],
        "off": [Function],
        "on": [Function],
        "once": [Function],
        "removeFromScene": [Function],
        "removeParentScene": [Function],
        "setDimension": [Function],
        "setMesh": [Function],
        "setParentScene": [Function],
        "setPosition": [Function],
        "setPositionX": [Function],
        "setPositionY": [Function],
        "setPositionZ": [Function],
        "stopListening": [Function],
        "translate": [Function],
        "translateX": [Function],
        "translateY": [Function],
        "translateZ": [Function],
        "trigger": [Function],
        "updateLightSource": [Function],
      },
    },
  ],
  Array [
    "FrontClick",
    Object {
      "target": Voxel {
        "_events": Object {
          "move": Array [
            Object {
              "callback": [Function],
              "context": undefined,
              "ctx": [Circular],
              "listening": undefined,
            },
          ],
        },
        "addToScene": [Function],
        "animDown": [Function],
        "animUp": [Function],
        "clone": [Function],
        "getAnimatedElement": [Function],
        "getDimension": [Function],
        "getDomElement": [Function],
        "getMesh": [Function],
        "getPosition": [Function],
        "getPositionX": [Function],
        "getPositionY": [Function],
        "getPositionZ": [Function],
        "listenTo": [Function],
        "listenToOnce": [Function],
        "off": [Function],
        "on": [Function],
        "once": [Function],
        "removeFromScene": [Function],
        "removeParentScene": [Function],
        "setDimension": [Function],
        "setMesh": [Function],
        "setParentScene": [Function],
        "setPosition": [Function],
        "setPositionX": [Function],
        "setPositionY": [Function],
        "setPositionZ": [Function],
        "stopListening": [Function],
        "translate": [Function],
        "translateX": [Function],
        "translateY": [Function],
        "translateZ": [Function],
        "trigger": [Function],
        "updateLightSource": [Function],
      },
    },
  ],
  Array [
    "BackClick",
    Object {
      "target": Voxel {
        "_events": Object {
          "move": Array [
            Object {
              "callback": [Function],
              "context": undefined,
              "ctx": [Circular],
              "listening": undefined,
            },
          ],
        },
        "addToScene": [Function],
        "animDown": [Function],
        "animUp": [Function],
        "clone": [Function],
        "getAnimatedElement": [Function],
        "getDimension": [Function],
        "getDomElement": [Function],
        "getMesh": [Function],
        "getPosition": [Function],
        "getPositionX": [Function],
        "getPositionY": [Function],
        "getPositionZ": [Function],
        "listenTo": [Function],
        "listenToOnce": [Function],
        "off": [Function],
        "on": [Function],
        "once": [Function],
        "removeFromScene": [Function],
        "removeParentScene": [Function],
        "setDimension": [Function],
        "setMesh": [Function],
        "setParentScene": [Function],
        "setPosition": [Function],
        "setPositionX": [Function],
        "setPositionY": [Function],
        "setPositionZ": [Function],
        "stopListening": [Function],
        "translate": [Function],
        "translateX": [Function],
        "translateY": [Function],
        "translateZ": [Function],
        "trigger": [Function],
        "updateLightSource": [Function],
      },
    },
  ],
  Array [
    "LeftClick",
    Object {
      "target": Voxel {
        "_events": Object {
          "move": Array [
            Object {
              "callback": [Function],
              "context": undefined,
              "ctx": [Circular],
              "listening": undefined,
            },
          ],
        },
        "addToScene": [Function],
        "animDown": [Function],
        "animUp": [Function],
        "clone": [Function],
        "getAnimatedElement": [Function],
        "getDimension": [Function],
        "getDomElement": [Function],
        "getMesh": [Function],
        "getPosition": [Function],
        "getPositionX": [Function],
        "getPositionY": [Function],
        "getPositionZ": [Function],
        "listenTo": [Function],
        "listenToOnce": [Function],
        "off": [Function],
        "on": [Function],
        "once": [Function],
        "removeFromScene": [Function],
        "removeParentScene": [Function],
        "setDimension": [Function],
        "setMesh": [Function],
        "setParentScene": [Function],
        "setPosition": [Function],
        "setPositionX": [Function],
        "setPositionY": [Function],
        "setPositionZ": [Function],
        "stopListening": [Function],
        "translate": [Function],
        "translateX": [Function],
        "translateY": [Function],
        "translateZ": [Function],
        "trigger": [Function],
        "updateLightSource": [Function],
      },
    },
  ],
  Array [
    "RightClick",
    Object {
      "target": Voxel {
        "_events": Object {
          "move": Array [
            Object {
              "callback": [Function],
              "context": undefined,
              "ctx": [Circular],
              "listening": undefined,
            },
          ],
        },
        "addToScene": [Function],
        "animDown": [Function],
        "animUp": [Function],
        "clone": [Function],
        "getAnimatedElement": [Function],
        "getDimension": [Function],
        "getDomElement": [Function],
        "getMesh": [Function],
        "getPosition": [Function],
        "getPositionX": [Function],
        "getPositionY": [Function],
        "getPositionZ": [Function],
        "listenTo": [Function],
        "listenToOnce": [Function],
        "off": [Function],
        "on": [Function],
        "once": [Function],
        "removeFromScene": [Function],
        "removeParentScene": [Function],
        "setDimension": [Function],
        "setMesh": [Function],
        "setParentScene": [Function],
        "setPosition": [Function],
        "setPositionX": [Function],
        "setPositionY": [Function],
        "setPositionZ": [Function],
        "stopListening": [Function],
        "translate": [Function],
        "translateX": [Function],
        "translateY": [Function],
        "translateZ": [Function],
        "trigger": [Function],
        "updateLightSource": [Function],
      },
    },
  ],
]
`;

exports[`Voxel can handle mesh change events 1`] = `
Array [
  Array [
    "MeshChange",
    Object {
      "mesh": Mesh {
        "_events": Object {
          "change": Array [
            Object {
              "callback": [Function],
              "context": undefined,
              "ctx": [Circular],
              "listening": undefined,
            },
          ],
        },
        "getBack": [Function],
        "getBottom": [Function],
        "getFaces": [Function],
        "getFront": [Function],
        "getLeft": [Function],
        "getRight": [Function],
        "getTop": [Function],
        "listenTo": [Function],
        "listenToOnce": [Function],
        "off": [Function],
        "on": [Function],
        "once": [Function],
        "serialize": [Function],
        "setBack": [Function],
        "setBottom": [Function],
        "setFaces": [Function],
        "setFront": [Function],
        "setLeft": [Function],
        "setRight": [Function],
        "setTop": [Function],
        "stopListening": [Function],
        "trigger": [Function],
      },
      "target": Voxel {
        "_events": Object {
          "move": Array [
            Object {
              "callback": [Function],
              "context": undefined,
              "ctx": [Circular],
              "listening": undefined,
            },
          ],
        },
        "addToScene": [Function],
        "animDown": [Function],
        "animUp": [Function],
        "clone": [Function],
        "getAnimatedElement": [Function],
        "getDimension": [Function],
        "getDomElement": [Function],
        "getMesh": [Function],
        "getPosition": [Function],
        "getPositionX": [Function],
        "getPositionY": [Function],
        "getPositionZ": [Function],
        "listenTo": [Function],
        "listenToOnce": [Function],
        "off": [Function],
        "on": [Function],
        "once": [Function],
        "removeFromScene": [Function],
        "removeParentScene": [Function],
        "setDimension": [Function],
        "setMesh": [Function],
        "setParentScene": [Function],
        "setPosition": [Function],
        "setPositionX": [Function],
        "setPositionY": [Function],
        "setPositionZ": [Function],
        "stopListening": [Function],
        "translate": [Function],
        "translateX": [Function],
        "translateY": [Function],
        "translateZ": [Function],
        "trigger": [Function],
        "updateLightSource": [Function],
      },
    },
  ],
]
`;

exports[`Voxel can handle right click events 1`] = `
Array [
  Array [
    "VoxelClick",
    Object {
      "target": Voxel {
        "_events": Object {
          "move": Array [
            Object {
              "callback": [Function],
              "context": undefined,
              "ctx": [Circular],
              "listening": undefined,
            },
          ],
        },
        "addToScene": [Function],
        "animDown": [Function],
        "animUp": [Function],
        "clone": [Function],
        "getAnimatedElement": [Function],
        "getDimension": [Function],
        "getDomElement": [Function],
        "getMesh": [Function],
        "getPosition": [Function],
        "getPositionX": [Function],
        "getPositionY": [Function],
        "getPositionZ": [Function],
        "listenTo": [Function],
        "listenToOnce": [Function],
        "off": [Function],
        "on": [Function],
        "once": [Function],
        "removeFromScene": [Function],
        "removeParentScene": [Function],
        "setDimension": [Function],
        "setMesh": [Function],
        "setParentScene": [Function],
        "setPosition": [Function],
        "setPositionX": [Function],
        "setPositionY": [Function],
        "setPositionZ": [Function],
        "stopListening": [Function],
        "translate": [Function],
        "translateX": [Function],
        "translateY": [Function],
        "translateZ": [Function],
        "trigger": [Function],
        "updateLightSource": [Function],
      },
    },
  ],
]
`;
